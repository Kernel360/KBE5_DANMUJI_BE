<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">

  <property name="LOG_PATH" value="logs"/>

  <!-- ✅ dev 프로파일: 콘솔 출력 전용 -->
  <springProfile name="dev">
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
      <encoder>
        <pattern>
          %yellow(%d{HH:mm:ss.SSS}) %green([%thread]) %highlight(%-5level) %magenta(%logger{36}) - %msg%n
        </pattern>
      </encoder>
    </appender>

    <!-- ✅ 비동기 Appender 추가 -->
    <appender name="ASYNC_CONSOLE" class="ch.qos.logback.classic.AsyncAppender">
      <appender-ref ref="CONSOLE"/>
    </appender>

    <root level="INFO">
      <appender-ref ref="ASYNC_CONSOLE"/>
    </root>
  </springProfile>

  <!-- ✅ release 프로파일: 파일 저장 -->
  <springProfile name="release">
    <appender name="RELEASE_ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <!--      <file>${LOG_PATH}/release/release.log</file>-->
      <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
        <fileNamePattern>${LOG_PATH}/release/release.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
        <maxFileSize>10MB</maxFileSize>
        <maxHistory>30</maxHistory>
        <totalSizeCap>1GB</totalSizeCap>
      </rollingPolicy>
      <encoder>
        <pattern>%yellow(%d{yyyy-MM-dd HH:mm:ss.SSS}) [%thread] %highlight(%-5level) %logger{36} - %cyan(%msg%n%ex)</pattern>
      </encoder>
    </appender>

    <!-- ✅ 비동기 Appender 추가 -->
    <appender name="ASYNC_RELEASE" class="ch.qos.logback.classic.AsyncAppender">
      <appender-ref ref="RELEASE_ERROR_FILE"/>
    </appender>

    <root level="ERROR">
      <appender-ref ref="ASYNC_RELEASE_ERROR_FILE"/>
    </root>
  </springProfile>

</configuration>