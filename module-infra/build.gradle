plugins {
    id 'org.springframework.boot' version '3.3.0'
}

dependencies {
    // module
    implementation project(':module-core')
    implementation project(':module-common')

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // security && jwt
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // spring mvc
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // aws s3 sdk
    implementation 'software.amazon.awssdk:s3:2.28.23'

    // mongodb atlas
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
    main {
        java {
            srcDirs += querydslDir
        }
    }
}

clean.doLast {
    delete querydslDir
}


bootJar {
    enabled = false
}

jar {
    enabled = true
}